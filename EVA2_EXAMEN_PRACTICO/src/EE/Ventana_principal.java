/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package EE;

import static EE.Ventana_principal.l;
import com.sun.xml.internal.bind.v2.runtime.output.SAXOutput;
import java.awt.BasicStroke;
import java.awt.Canvas;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Point;
import java.awt.Stroke;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import static java.nio.channels.AsynchronousServerSocketChannel.open;
import java.util.Scanner;
import javax.swing.JButton;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author mrs_p
 */
public class Ventana_principal extends javax.swing.JFrame {

    /**
     * Creates new form Ventana_principal
     */
    Graphics2D g2d;
    public static lista l = new lista();
    Color g = Color.black;
    float size;
    
    float[] Patron1 = {2f, 2f};
    Stroke stroke1 = new BasicStroke(size, BasicStroke.CAP_BUTT,
        BasicStroke.JOIN_MITER, 1.0f, Patron1, 2.0f);
    
    float[] Patron2 = {10f, 4f};
    Stroke stroke2 = new BasicStroke(size, BasicStroke.CAP_BUTT,
        BasicStroke.JOIN_MITER, 1.0f, Patron2, 0.0f);
    
    float[] Patron3 = {10f, 10f, 1f, 10f};
    Stroke stroke3 = new BasicStroke(size, BasicStroke.CAP_SQUARE,
        BasicStroke.JOIN_MITER, 1.0f, Patron3, 0.0f);
    
    Stroke stroke = new BasicStroke(4f);

    public Ventana_principal() {
        initComponents();
        setLocationRelativeTo(null);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        canvas = new java.awt.Canvas();
        Bar = new javax.swing.JMenuBar();
        menFile = new javax.swing.JMenu();
        itNew = new javax.swing.JMenuItem();
        itSave = new javax.swing.JMenuItem();
        itLoad = new javax.swing.JMenuItem();
        itPrintP = new javax.swing.JMenuItem();
        menColor = new javax.swing.JMenu();
        itDraw = new javax.swing.JMenuItem();
        menLiCo = new javax.swing.JMenu();
        itGreen = new javax.swing.JMenuItem();
        itRed = new javax.swing.JMenuItem();
        itBlue = new javax.swing.JMenuItem();
        itYellow = new javax.swing.JMenuItem();
        itOrange = new javax.swing.JMenuItem();
        itPink = new javax.swing.JMenuItem();
        itMagenta = new javax.swing.JMenuItem();
        itCyan = new javax.swing.JMenuItem();
        itGray = new javax.swing.JMenuItem();
        itBlack = new javax.swing.JMenuItem();
        menLinPat = new javax.swing.JMenu();
        itA = new javax.swing.JMenuItem();
        itB = new javax.swing.JMenuItem();
        itC = new javax.swing.JMenuItem();
        itDef = new javax.swing.JMenuItem();
        menLinSize = new javax.swing.JMenu();
        itDos = new javax.swing.JMenuItem();
        itCuatro = new javax.swing.JMenuItem();
        itSeis = new javax.swing.JMenuItem();
        itOcho = new javax.swing.JMenuItem();
        itDiez = new javax.swing.JMenuItem();
        menSalir = new javax.swing.JMenu();
        itSalir = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });

        canvas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                canvasMouseClicked(evt);
            }
        });

        menFile.setText("File");
        menFile.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                menFileMouseMoved(evt);
            }
        });
        menFile.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                menFileMouseClicked(evt);
            }
        });

        itNew.setText("New");
        itNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itNewActionPerformed(evt);
            }
        });
        menFile.add(itNew);

        itSave.setText("Save");
        itSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itSaveActionPerformed(evt);
            }
        });
        menFile.add(itSave);

        itLoad.setText("Load");
        itLoad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itLoadActionPerformed(evt);
            }
        });
        menFile.add(itLoad);

        itPrintP.setText("Print Points");
        itPrintP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itPrintPActionPerformed(evt);
            }
        });
        menFile.add(itPrintP);

        Bar.add(menFile);

        menColor.setText("Figure");
        menColor.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                menColorMouseMoved(evt);
            }
        });
        menColor.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                menColorMouseClicked(evt);
            }
        });

        itDraw.setText("Draw Lines");
        itDraw.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itDrawActionPerformed(evt);
            }
        });
        menColor.add(itDraw);

        menLiCo.setText("Line Color");

        itGreen.setText("Green");
        itGreen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itGreenActionPerformed(evt);
            }
        });
        menLiCo.add(itGreen);

        itRed.setText("Red");
        itRed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itRedActionPerformed(evt);
            }
        });
        menLiCo.add(itRed);

        itBlue.setText("Blue");
        itBlue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itBlueActionPerformed(evt);
            }
        });
        menLiCo.add(itBlue);

        itYellow.setText("Yellow");
        itYellow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itYellowActionPerformed(evt);
            }
        });
        menLiCo.add(itYellow);

        itOrange.setText("Orange");
        itOrange.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itOrangeActionPerformed(evt);
            }
        });
        menLiCo.add(itOrange);

        itPink.setText("Pink");
        itPink.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itPinkActionPerformed(evt);
            }
        });
        menLiCo.add(itPink);

        itMagenta.setText("Magenta");
        itMagenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itMagentaActionPerformed(evt);
            }
        });
        menLiCo.add(itMagenta);

        itCyan.setText("Cyan");
        itCyan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itCyanActionPerformed(evt);
            }
        });
        menLiCo.add(itCyan);

        itGray.setText("Gray");
        itGray.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itGrayActionPerformed(evt);
            }
        });
        menLiCo.add(itGray);

        itBlack.setText("Black");
        itBlack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itBlackActionPerformed(evt);
            }
        });
        menLiCo.add(itBlack);

        menColor.add(menLiCo);

        menLinPat.setText("Line Patterns");

        itA.setText("Pattern A");
        itA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itAActionPerformed(evt);
            }
        });
        menLinPat.add(itA);

        itB.setText("Pattern B");
        itB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itBActionPerformed(evt);
            }
        });
        menLinPat.add(itB);

        itC.setText("Pattern C");
        itC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itCActionPerformed(evt);
            }
        });
        menLinPat.add(itC);

        itDef.setText("Default Pattern");
        itDef.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itDefActionPerformed(evt);
            }
        });
        menLinPat.add(itDef);

        menColor.add(menLinPat);

        menLinSize.setText("Line Size");

        itDos.setText("2");
        itDos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itDosActionPerformed(evt);
            }
        });
        menLinSize.add(itDos);

        itCuatro.setText("4");
        itCuatro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itCuatroActionPerformed(evt);
            }
        });
        menLinSize.add(itCuatro);

        itSeis.setText("6");
        itSeis.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itSeisActionPerformed(evt);
            }
        });
        menLinSize.add(itSeis);

        itOcho.setText("8");
        itOcho.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itOchoActionPerformed(evt);
            }
        });
        menLinSize.add(itOcho);

        itDiez.setText("10");
        itDiez.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itDiezActionPerformed(evt);
            }
        });
        menLinSize.add(itDiez);

        menColor.add(menLinSize);

        Bar.add(menColor);

        menSalir.setText("Exit");
        menSalir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                menSalirMouseClicked(evt);
            }
        });

        itSalir.setText("Exit");
        itSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itSalirActionPerformed(evt);
            }
        });
        menSalir.add(itSalir);

        Bar.add(menSalir);

        setJMenuBar(Bar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addComponent(canvas, javax.swing.GroupLayout.PREFERRED_SIZE, 623, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(53, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(canvas, javax.swing.GroupLayout.PREFERRED_SIZE, 438, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(35, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    

    private void canvasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_canvasMouseClicked
        // TODO add your handling code here:
        Graphics2D g2d = (Graphics2D) canvas.getGraphics();
        Point pPunto = evt.getPoint();
        g2d.drawOval(pPunto.x, pPunto.y, 10, 10);
        l.agregarNodo(new nodo(pPunto.x, pPunto.y));
    }//GEN-LAST:event_canvasMouseClicked

    private void itSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itSalirActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_itSalirActionPerformed

    private void itNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itNewActionPerformed
        // TODO add your handling code here:
        Graphics gc = canvas.getGraphics();
        l.vaciarLista();
        gc.clearRect(0, 0, 623, 438);
    }//GEN-LAST:event_itNewActionPerformed

    private void itPrintPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itPrintPActionPerformed
        // TODO add your handling code here:
        l.imprimirEl();
    }//GEN-LAST:event_itPrintPActionPerformed

    private void itDrawActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itDrawActionPerformed
        // TODO add your handling code here:
        Graphics2D g2d = (Graphics2D) canvas.getGraphics();
        g2d.setStroke(new BasicStroke(10f));
        g2d.setColor(Color.LIGHT_GRAY);
        l.unirPuntos(g2d);
        
        g2d.setStroke(stroke);
        g2d.setColor(g);
        l.unirPuntos(g2d);
    }//GEN-LAST:event_itDrawActionPerformed

    private void itSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itSaveActionPerformed
        // TODO add your handling code here:
        /*try {
            //String ar = JOptionPane.showInputDialog(null, "¿Cuál será el nombre del archivo?", "Guardar Archivo", 0);
             /*FileOutputStream salArch = new FileOutputStream(ar+".dat");
             ObjectOutputStream salStream = new ObjectOutputStream(salArch);
             salStream.writeObject(l);
             
             JOptionPane.showMessageDialog(null, "Archivo guardado");*/
             
             /*JFileChooser fc = new JFileChooser(new File("C:/Users/mrs_p/Documents/NetBeansProjects/EVA2_EXAMEN_PRACTICO"));
             fc.setDialogTitle("Save File");
             //fc.setFileFilter(new FileTypeFilter(".dat", "dat file"));
             fc.showSaveDialog(null);*/
             
    /*         JButton open = new JButton();
       JFileChooser fc = new JFileChooser();
       fc.setCurrentDirectory(new java.io.File("C:/Users/mrs_p/Documents/NetBeansProjects/EVA2_EXAMEN_PRACTICO"));
       fc.setDialogTitle("Save File");
       fc.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);
       if(fc.showOpenDialog(open) == JFileChooser.APPROVE_OPTION) {
           File file = fc.getSelectedFile()
             FileOutputStream salArch = new FileOutputStream(txtnomar.getText()+".dat");
             ObjectOutputStream salStream = new ObjectOutputStream(salArch);
             salStream.writeObject(datos);
             
        } catch(Exception e) {
            JOptionPane.showMessageDialog(null, "ERROR IN SAVING THE FILE", "ERROR", 0);
        }*/
    }//GEN-LAST:event_itSaveActionPerformed

    private void itGreenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itGreenActionPerformed
        // TODO add your handling code here:
        g = Color.green;
    }//GEN-LAST:event_itGreenActionPerformed

    private void itRedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itRedActionPerformed
        // TODO add your handling code here:
        g = Color.red;
    }//GEN-LAST:event_itRedActionPerformed

    private void itBlueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itBlueActionPerformed
        // TODO add your handling code here:
        g = Color.blue;
    }//GEN-LAST:event_itBlueActionPerformed

    private void itYellowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itYellowActionPerformed
        // TODO add your handling code here:
        g = Color.yellow;
    }//GEN-LAST:event_itYellowActionPerformed

    private void itOrangeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itOrangeActionPerformed
        // TODO add your handling code here:
        g = Color.orange;
    }//GEN-LAST:event_itOrangeActionPerformed

    private void itPinkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itPinkActionPerformed
        // TODO add your handling code here:
        g = Color.pink;
    }//GEN-LAST:event_itPinkActionPerformed

    private void itMagentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itMagentaActionPerformed
        // TODO add your handling code here:
        g = Color.magenta;
    }//GEN-LAST:event_itMagentaActionPerformed

    private void itCyanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itCyanActionPerformed
        // TODO add your handling code here:
        g = Color.cyan;
    }//GEN-LAST:event_itCyanActionPerformed

    private void itGrayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itGrayActionPerformed
        // TODO add your handling code here:
        g = Color.gray;
    }//GEN-LAST:event_itGrayActionPerformed

    private void itAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itAActionPerformed
        // TODO add your handling code here:
        stroke = stroke1;
    }//GEN-LAST:event_itAActionPerformed

    private void itBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itBActionPerformed
        // TODO add your handling code here:
        stroke = stroke2;
    }//GEN-LAST:event_itBActionPerformed

    private void itCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itCActionPerformed
        // TODO add your handling code here:
        stroke = stroke3;
    }//GEN-LAST:event_itCActionPerformed

    private void itDefActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itDefActionPerformed
        // TODO add your handling code here:
        stroke = new BasicStroke(size);
    }//GEN-LAST:event_itDefActionPerformed

    private void itBlackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itBlackActionPerformed
        // TODO add your handling code here:
        g = Color.black;
    }//GEN-LAST:event_itBlackActionPerformed

    private void itLoadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itLoadActionPerformed
        // TODO add your handling code here:
       /* if (evt.getSource() == itLoad) {
        JFileChooser choice = new JFileChooser();
        int option = choice.showOpenDialog(this);
        if (option == JFileChooser.APPROVE_OPTION) {
            try{
                Scanner scan = new Scanner(new FileReader((itLoad).getSelectedFile().getPath()));
            } catch (Exception e) {
                
            }
       
        }

    }*/
      try{ JButton open = new JButton();
       JFileChooser fc = new JFileChooser();
       fc.setCurrentDirectory(new java.io.File("C:/Users/mrs_p/Documents/NetBeansProjects/EVA2_EXAMEN_PRACTICO"));
       fc.setDialogTitle("Save File");
       fc.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);
       if(fc.showOpenDialog(open) == JFileChooser.APPROVE_OPTION) {
           File file = fc.getSelectedFile();
           FileInputStream fis = new FileInputStream(file.getName() + ".dat");
           ObjectInputStream ois = new ObjectInputStream(fis);
           Object object = ois.readObject();
       }
      } catch(Exception e) {
          
      }
      
    }//GEN-LAST:event_itLoadActionPerformed

    private void menFileMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menFileMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_menFileMouseClicked

    private void menColorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menColorMouseClicked
        // TODO add your handling code here:
        repaint();
    }//GEN-LAST:event_menColorMouseClicked

    private void menSalirMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menSalirMouseClicked
        // TODO add your handling code here:
        repaint();
    }//GEN-LAST:event_menSalirMouseClicked

    private void menFileMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menFileMouseMoved
        // TODO add your handling code here:
        repaint();
    }//GEN-LAST:event_menFileMouseMoved

    private void menColorMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menColorMouseMoved
        // TODO add your handling code here:
        repaint();
    }//GEN-LAST:event_menColorMouseMoved

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_formMouseClicked

    private void itDosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itDosActionPerformed
        // TODO add your handling code here:
        size = 2f;
    }//GEN-LAST:event_itDosActionPerformed

    private void itCuatroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itCuatroActionPerformed
        // TODO add your handling code here:
        size = 4f;
    }//GEN-LAST:event_itCuatroActionPerformed

    private void itSeisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itSeisActionPerformed
        // TODO add your handling code here:
        size = 6f;
    }//GEN-LAST:event_itSeisActionPerformed

    private void itOchoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itOchoActionPerformed
        // TODO add your handling code here:
        size = 8f;
    }//GEN-LAST:event_itOchoActionPerformed

    private void itDiezActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itDiezActionPerformed
        // TODO add your handling code here:
        size = 10f;
    }//GEN-LAST:event_itDiezActionPerformed


    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Ventana_principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Ventana_principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Ventana_principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Ventana_principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Ventana_principal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuBar Bar;
    private java.awt.Canvas canvas;
    private javax.swing.JMenuItem itA;
    private javax.swing.JMenuItem itB;
    private javax.swing.JMenuItem itBlack;
    private javax.swing.JMenuItem itBlue;
    private javax.swing.JMenuItem itC;
    private javax.swing.JMenuItem itCuatro;
    private javax.swing.JMenuItem itCyan;
    private javax.swing.JMenuItem itDef;
    private javax.swing.JMenuItem itDiez;
    private javax.swing.JMenuItem itDos;
    private javax.swing.JMenuItem itDraw;
    private javax.swing.JMenuItem itGray;
    private javax.swing.JMenuItem itGreen;
    private javax.swing.JMenuItem itLoad;
    private javax.swing.JMenuItem itMagenta;
    private javax.swing.JMenuItem itNew;
    private javax.swing.JMenuItem itOcho;
    private javax.swing.JMenuItem itOrange;
    private javax.swing.JMenuItem itPink;
    private javax.swing.JMenuItem itPrintP;
    private javax.swing.JMenuItem itRed;
    private javax.swing.JMenuItem itSalir;
    private javax.swing.JMenuItem itSave;
    private javax.swing.JMenuItem itSeis;
    private javax.swing.JMenuItem itYellow;
    private javax.swing.JMenu menColor;
    private javax.swing.JMenu menFile;
    private javax.swing.JMenu menLiCo;
    private javax.swing.JMenu menLinPat;
    private javax.swing.JMenu menLinSize;
    private javax.swing.JMenu menSalir;
    // End of variables declaration//GEN-END:variables
}

class nodo {
    private int x;
    private int y;
    private nodo sig;
    private nodo prev;
    
     public nodo() {
        x = 0;
        y = 0;
        sig = null;
        prev = null;
    }
     
     public nodo(int x, int y) {
         this.x = x;
         this.y = y;
         sig = null;
         prev = null;
     }

    public int getX() {
        return x;
    }

    public void setX(int x) {
        this.x = x;
    }

    public int getY() {
        return y;
    }

    public void setY(int y) {
        this.y = y;
    }

    public nodo getSig() {
        return sig;
    }

    public void setSig(nodo sig) {
        this.sig = sig;
    }

    public nodo getPrev() {
        return prev;
    }

    public void setPrev(nodo prev) {
        this.prev = prev;
    }
     
     
}

class lista {
    private nodo nIni;
    private nodo nFin;
    
    public lista() {
        nIni = null;
        nFin = null;
    }
    
    public lista(nodo inodo) {
        nIni = inodo;
        nFin = inodo;
    }
    
    public void agregarNodo(nodo Nodo) { //agregar un nodo al final de la lista
        if(nIni == null) {
            nIni = Nodo;
            nFin = Nodo;
        } else {
            nFin.setSig(Nodo);
            Nodo.setPrev(nFin);
            nFin = Nodo;
        }
    }
    
    public void vaciarLista() {
        nIni = null;
        nFin = null;
    }
    
        public void imprimirEl() {
        nodo nTemp = nIni;
        if(nIni == null) {
            JOptionPane.showMessageDialog(null, "No se ha señalado ningún punto");
        } else {
            int contador = 0;
            while(nTemp != null) {
                contador++;
                JOptionPane.showMessageDialog(null, "x: " + nTemp.getX() + " y: " + nTemp.getY(), "Punto " + contador, 0);
                nTemp = nTemp.getSig();
           }
        }
        
    }
      
        public void unirPuntos(Graphics2D g) {
            nodo nTemp = nIni;
            if(nIni == null) {
                JOptionPane.showMessageDialog(null, "No se ha hecho ningun punto");
            } else {
                while(nTemp.getSig() != null) {
                    g.drawLine(nTemp.getX()+3, nTemp.getY()+3, nTemp.getSig().getX()+3, nTemp.getSig().getY()+3);
                    nTemp = nTemp.getSig();
                }
                g.drawLine(nTemp.getX()+3, nTemp.getY()+3, nIni.getX()+3, nIni.getY()+3);
            }
        }
        
        public int contarEl() {
        nodo nTemp = nIni;
        if(nIni == null) {
            return 0;
        } else {
            int contador = 0;
            while(nTemp != null) {
                contador++;
                nTemp = nTemp.getSig();
            }
            return contador;
        }
    }
    
}